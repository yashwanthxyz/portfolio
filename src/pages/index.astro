---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card/index.astro";
import IntroCard from "../components/IntroCard.astro";
import ContactsCard from "../components/ContactsCard.astro";
import TimeZone from "../components/TimeZoneCard.astro";
import AboutMe from "../components/AboutMe.astro";
import Now from "../components/Now.astro";
import Globe from "../components/Globe";
import { getCollection } from "astro:content";
import { formatDate } from "../lib/helpers";

const posts = (await getCollection("blog"))?.sort((a, b) => {
  const pubDateDiff = (b.data.pubDate || new Date()).getTime() - (a.data.pubDate || new Date()).getTime();
  if (pubDateDiff === 0) {
    return (b.data.createdAt || new Date()).getTime() - (a.data.createdAt || new Date()).getTime();
  }
  return pubDateDiff;
});
---

<script>
  import { stagger, animate, type AnimationSequence } from "motion";
  import { loaderAnimation } from "../lib/constants";
  const cards = document.querySelectorAll(".card");

  const sequence = [
    loaderAnimation,
    [
      cards,
      { y: ["40%", "0%"], opacity: [0, 1] },
      {
        type: "spring",
        at: "-0.1",
        delay: stagger(0.3),
      },
    ],
  ];

  animate(sequence as AnimationSequence);
</script>

<Layout
  description="I'm Yashwanth, an aspiring AI Engineer from India passionate about building intelligent and impactful systems."
  title="Yashwanth"
>
  <main
    class="text-white m-auto p-2 grid gap-2 max-w-6xl overflow-hidden relative w-full sm:p-4 sm:gap-2 md:grid-cols-2 md:gap-3 md:p-6 lg:h-screen lg:grid-rows-8 lg:grid-cols-4 lg:gap-4 lg:max-h-[800px]"
  >
    <IntroCard />
    <AboutMe />
    <ContactsCard />
    <TimeZone />
    <Now />

    <Card
      colorText="text-neutral-900"
      colSpan="md:col-span-1"
      href="travel"
      rowSpan="md:row-span-1"
      title="Countries I visited"
    >
      <div class="h-full w-full absolute inset-0 -z-10">
        <Globe client:load />
      </div>
    </Card>

    <Card
      colSpan="md:col-span-1"
      href="/blog"
      rowSpan="md:row-span-2"
      title="Blog"
    >
      <div class="flex flex-col h-full">
        <div class="flex flex-col gap-2">
          {
            posts?.slice(0, 3).map((post) => (
              <a
                class="text-sm decoration-none flex justify-between"
                href={`/blog/${post.id}`}
              >
                <div class="list-none w-full text-neutral-100 hover:text-neutral-400 ease-in-out transition-colors border-b-neutral-400 border-dashed border-b-1 py-2">
                  <p class="font-medium mb-1">
                    {post.data.title}
                  </p>
                  {post.data.pubDate && (
                    <time
                      class="text-xs text-neutral-400 tabular-nums"
                      datetime={post.data.pubDate.toISOString()}
                    >
                      {formatDate(post.data.pubDate)}
                    </time>
                  )}
                </div>
              </a>
            ))
          }
        </div>
      </div>
    </Card>

    <Card colSpan="md:col-span-1" rowSpan="md:row-span-1">
      <p class="text-xs">
        © 2025 · Crafted with <img src="https://em-content.zobj.net/source/apple/419/red-heart_2764-fe0f.png" alt="heart emoji" class="inline w-4 h-4 align-text-bottom" /> by Yashwanth.
      </p>
    </Card>
  </main>
</Layout>